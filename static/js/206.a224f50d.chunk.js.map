{"version":3,"file":"static/js/206.a224f50d.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Content/Profile/Post/Post.module.css?8dde","components/Content/Profile/Post/Post.tsx","webpack://samurai-way/./src/components/Content/Profile/Wall/Wall.module.css?1f51","webpack://samurai-way/./src/components/Content/Profile/SubmitPost/SubmitPost.module.css?53d2","components/Content/Profile/SubmitPost/AddPostForm.tsx","components/Content/Profile/Wall/Wall.tsx","components/Content/Profile/Wall/WallContainer.tsx","webpack://samurai-way/./src/components/Content/Profile/Header/Header.module.css?4705","components/Content/Profile/Header/HeaderComp/MainAvatar.tsx","components/Content/Profile/Header/HeaderComp/MainName.tsx","components/Content/Profile/Header/HeaderComp/MainStatus.tsx","components/Content/Profile/Header/ProfileDataFrom.tsx","components/Content/Profile/Header/HeaderContainer.tsx","components/Content/Profile/Header/Header.tsx","components/Content/Profile/Profile.tsx","components/Content/Profile/ProfileContainer.tsx","webpack://samurai-way/./src/components/Content/Profile/UserCard/CardUser.module.css?b892","components/Content/Profile/UserCard/CardUser.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__-5wHv\",\"divider\":\"Post_divider__J0Xdp\",\"content\":\"Post_content__b6mf8\",\"active\":\"Post_active__5Jm8D\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\nimport {CardUser} from '../UserCard/CardUser';\r\nimport {Divider} from 'antd';\r\n\r\ntype PropsType = {\r\n    name: string\r\n    date: string\r\n    postContent: string\r\n    likes: number\r\n    comments: number\r\n}\r\n\r\nexport function Post({name, date, postContent, likes, comments}: PropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <CardUser size={64} url={'https://imgv3.fotor.com/images/blog-cover-image/10-profile-picture-ideas-to-make-you-stand-out.jpg'} name={name} status={date}/>\r\n\r\n            <Divider className={s.divider}/>\r\n\r\n            <div className={s.content}>\r\n                {postContent}\r\n            </div>\r\n\r\n            <div className={s.active}>\r\n                likes: <span> {likes} </span> comments: <span> {comments} </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"wall\":\"Wall_wall__itoQs\"};","// extracted by mini-css-extract-plugin\nexport default {\"submitPost\":\"SubmitPost_submitPost__qpJmZ\"};","import React from 'react';\r\nimport s from './SubmitPost.module.css'\r\nimport {Button, Input} from 'antd';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {makeField} from '../../../../hoc/makeField';\r\nimport {required} from '../../../../utils/validators';\r\n\r\n\r\nconst {TextArea} = Input\r\nconst ATextarea = makeField(TextArea);\r\nconst TextAreareq = required(false)\r\n\r\nfunction AddPostForm(props: InjectedFormProps<{postText: string}>) {\r\n\r\n    return (\r\n        <form className={s.submitPost} onSubmit={props.handleSubmit}>\r\n            <Field component={ATextarea}\r\n                   name={'postText'}\r\n                   placeholder={\"What's new?\"}\r\n                   size={'large'}\r\n                   autoSize={{ minRows: 2, maxRows: 8 }}\r\n                   hasFeedback\r\n                   validate={[TextAreareq]}/>\r\n            <Button size={'large'} htmlType={'submit'} shape={'round'} disabled={props.pristine}> Post </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm<{postText: string}>({form: 'add-post'})(AddPostForm)","import React, {memo} from 'react';\r\nimport {Post} from '../Post/Post';\r\nimport s from './Wall.module.css';\r\nimport AddPostForm from '../SubmitPost/AddPostForm';\r\nimport {WallPropsType} from './WallContainer';\r\n\r\n\r\nexport const Wall = memo((props: WallPropsType) => {\r\n    let {posts, addPost} = props\r\n\r\n    const mappedPosts = posts.map((p) => {\r\n        return (\r\n            <Post key={p.id} name={p.name} date={p.date} postContent={p.postContent} likes={p.likes}\r\n                  comments={p.comments}/>\r\n        )\r\n    })\r\n\r\n    const onSubmit = (value: { postText: string }) => {\r\n        addPost(value.postText)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wall}>\r\n            <AddPostForm onSubmit={onSubmit}/>\r\n\r\n            {mappedPosts}\r\n        </div>\r\n    )\r\n})\r\n\r\n","import {addPost, PostType} from '../../../../redux/profileReducer';\r\nimport {Wall} from './Wall';\r\nimport {connect} from 'react-redux';\r\nimport {RootStateType} from '../../../../redux/redux-store';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    posts: Array<PostType>\r\n}\r\ntype MapDispatchToPropsType = {\r\n    addPost: (value: string) => void\r\n}\r\nexport type WallPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\n\r\nexport const WallContainer = connect(mapStateToProps, {addPost})(Wall)\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__HVMoX\",\"cover\":\"Header_cover__vp8+Y\",\"inner\":\"Header_inner__I5gmW\",\"avatar\":\"Header_avatar__HOGCh\",\"info\":\"Header_info__fBb0I\",\"ownerName\":\"Header_ownerName__Eg6S0\",\"status\":\"Header_status__Q0EBU\",\"statusText\":\"Header_statusText__zgaRU\",\"fullInfo\":\"Header_fullInfo__W30Jo\",\"infoTag\":\"Header_infoTag__Z0h5C\"};","import React from 'react';\r\nimport s from '../Header.module.css'\r\nimport {Avatar, Badge} from 'antd';\r\n\r\ntype PropsType = {\r\n    url: string | undefined | null\r\n    online: boolean\r\n}\r\n\r\nexport function MainAvatar({url, online}: PropsType) {\r\n\r\n    return (\r\n        <div className={s.avatar}>\r\n            <Badge dot offset={[-35, 160]} color={online ? 'green' : 'grey'} style={{width: '20px', height: '20px', border: '2px solid white'}}>\r\n                <Avatar size={180} src={url ? url : 'https://placehold.jp/180x180.png'}/>\r\n            </Badge>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport s from '../Header.module.css';\r\n\r\ntype PropsType = {\r\n    name: string | undefined\r\n}\r\n\r\nexport function MainName({name}: PropsType) {\r\n    return (\r\n        <h2 className={s.ownerName}>{name ? name : 'Name Surname'}</h2>\r\n    );\r\n}\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport s from '../Header.module.css';\r\nimport {Input} from 'antd';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\ntype StateType = {\r\n    editMode: boolean;\r\n    status: string\r\n}\r\n\r\nconst {TextArea} = Input\r\n\r\nexport class MainStatus extends React.Component<PropsType, StateType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<StateType>) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    activateEditMode = (): void => {\r\n        this.setState({editMode: true})\r\n    }\r\n    deactivateEditMode = (): void => {\r\n        this.setState({editMode: false})\r\n        this.setState({status: this.props.status})\r\n    }\r\n    onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>): void => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n    onEnterPressHandler = (e: KeyboardEvent<HTMLTextAreaElement>): void => {\r\n        if (e.key === 'Enter') {\r\n            this.deactivateEditMode()\r\n            this.props.updateStatus(this.state.status.trim())\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className={s.status}>\r\n            {!this.state.editMode\r\n                ? <span className={s.statusText}\r\n                        onDoubleClick={this.activateEditMode}>{this.props.status || 'no status :('}</span>\r\n                : <TextArea size={'middle'}\r\n                            autoSize={{minRows: 1, maxRows: 3}}\r\n                            placeholder={'Tell us something...'}\r\n                            maxLength={230}\r\n                            autoFocus\r\n                            value={this.state.status}\r\n                            onChange={this.onChangeHandler}\r\n                            onBlur={this.deactivateEditMode}\r\n                            onKeyDown={this.onEnterPressHandler}/>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {makeField} from '../../../../hoc/makeField';\r\nimport {Alert, Button, Checkbox, Input} from 'antd';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {ProfileFormDataType} from './Header';\r\nimport {required} from '../../../../utils/validators';\r\n\r\nconst {TextArea} = Input\r\nconst AInput = makeField(Input)\r\nconst ACheckbox = makeField(Checkbox)\r\nconst ATextArea = makeField(TextArea)\r\nconst InputReq = required(true)\r\nconst TextAreaReq = required(false)\r\n\r\n\r\nconst ProfileDataFrom = (props: InjectedFormProps<ProfileFormDataType>) => {\r\n    return (\r\n        <>\r\n            <div style={{minHeight: '55px'}}>\r\n                {props.error && <Alert\r\n                message={props.error}\r\n                type=\"error\"\r\n                showIcon\r\n                closable\r\n            />}\r\n            </div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field name={'fullName'}\r\n                       label={'Name'}\r\n                       component={AInput}\r\n                       validate={[InputReq]}\r\n                       size={'middle'}/>\r\n                <Field name={'aboutMe'}\r\n                       label={'about Me'}\r\n                       component={ATextArea}\r\n                       validate={[TextAreaReq]}\r\n                       rows={3}\r\n                       size={'middle'}/>\r\n                <Field name={'lookingForAJob'}\r\n                       label={'Looking for a job'}\r\n                       component={ACheckbox}\r\n                       size={'middle'}\r\n                       type=\"checkbox\"/>\r\n                <Field name={'lookingForAJobDescription'}\r\n                       label={'My professional skills'}\r\n                       component={ATextArea}\r\n                       validate={[TextAreaReq]}\r\n                       rows={3}\r\n                       size={'middle'}/>\r\n\r\n                <Field name={'vk'}\r\n                       label={'VK'}\r\n                       component={AInput}\r\n                       size={'middle'}/>\r\n                <Field name={'facebook'}\r\n                       label={'Facebook'}\r\n                       component={AInput}\r\n                       size={'middle'}/>\r\n                <Field name={'github'}\r\n                       label={'Github'}\r\n                       component={AInput}\r\n                       size={'middle'}/>\r\n                <Field name={'twitter'}\r\n                       label={'Twitter'}\r\n                       component={AInput}\r\n                       size={'middle'}/>\r\n                <Field name={'instagram'}\r\n                       label={'Instagram'}\r\n                       component={AInput}\r\n                       size={'middle'}/>\r\n                <div style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <Button size={'middle'}\r\n                            htmlType={'submit'}\r\n                            shape={'round'}\r\n                            type={'primary'}\r\n                            disabled={props.pristine || props.submitting}>\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default reduxForm<ProfileFormDataType>({form: 'edit-profile'})(ProfileDataFrom)\r\n","import {Header} from \"./Header\";\r\nimport {connect} from 'react-redux';\r\nimport {RootStateType} from '../../../../redux/redux-store';\r\nimport {ProfilePageHeaderType, updateProfileData, updateStatus, uploadPhoto} from '../../../../redux/profileReducer';\r\nimport {compose} from 'redux';\r\nimport {ComponentType} from 'react';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {UpdateProfileData} from '../../../../api/api';\r\n\r\ntype PathParamsType = {\r\n    userId: string | undefined\r\n}\r\ntype MapStateToPropsType = {\r\n    header: ProfilePageHeaderType\r\n    status: string\r\n}\r\nexport type HeaderPropsType = MapStateToPropsType & RouteComponentProps<PathParamsType> & {\r\n    updateStatus: (status: string) => void\r\n    uploadPhoto: (file: any) => void\r\n    updateProfileData: (model: UpdateProfileData) => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n    return {\r\n        header: state.profilePage.header,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nexport const HeaderContainer = compose<ComponentType>(connect(mapStateToProps, {updateStatus, uploadPhoto, updateProfileData}), withRouter)(Header)","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './Header.module.css'\r\nimport {MainAvatar} from './HeaderComp/MainAvatar';\r\nimport {MainName} from './HeaderComp/MainName';\r\nimport {MainStatus} from './HeaderComp/MainStatus';\r\nimport {HeaderPropsType} from './HeaderContainer';\r\nimport {Button, Modal} from 'antd';\r\nimport UpdateProfileDataFrom from './ProfileDataFrom';\r\nimport {UpdateProfileData} from '../../../../api/api';\r\n\r\nexport type ProfileFormDataType = {\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    aboutMe: string\r\n    lookingForAJobDescription: string\r\n    vk: string\r\n    github: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n}\r\n\r\nexport function Header({header, status, updateStatus, uploadPhoto, match, updateProfileData}: HeaderPropsType) {\r\n    const [isModalOpen, setIsModalOpen] = useState<boolean>(false)\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const onPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        uploadPhoto(e.target.files?.[0])\r\n    }\r\n\r\n    const onSubmit = (formData: ProfileFormDataType) => {\r\n        const model: UpdateProfileData = {\r\n            userId: header.userId,\r\n            fullName: formData.fullName,\r\n            aboutMe: formData.aboutMe,\r\n            lookingForAJob: formData.lookingForAJob || header.lookingForAJob,\r\n            lookingForAJobDescription: formData.lookingForAJobDescription,\r\n            contacts: {\r\n                ...header.contacts,\r\n                vk: formData.vk || header.contacts.vk,\r\n                github: formData.github || header.contacts.github,\r\n                facebook: formData.facebook || header.contacts.facebook,\r\n                instagram: formData.instagram || header.contacts.instagram,\r\n                twitter: formData.twitter || header.contacts.twitter\r\n            }\r\n        }\r\n        updateProfileData(model)\r\n    }\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.cover}></div>\r\n            <div className={s.inner}>\r\n                <MainAvatar online={false} url={header.photos?.large}/>\r\n                <div className={s.info}>\r\n\r\n                    <MainName name={header?.fullName}/>\r\n                    <MainStatus status={status} updateStatus={updateStatus}/>\r\n\r\n                    <div className={s.fullInfo}>\r\n                        <Button type=\"primary\" onClick={() => {\r\n                            setIsModalOpen(true)\r\n                        }} shape={'round'} size={'middle'}>\r\n                            Learn more\r\n                        </Button>\r\n                        <Modal title=\"Additional info\"\r\n                               visible={isModalOpen}\r\n                               width={800}\r\n                               onCancel={() => {\r\n                                   setIsModalOpen(false)\r\n                                   setEditMode(false)\r\n                               }}\r\n                               footer={!match.params.userId\r\n                                   ? [\r\n                                       <Button key=\"back\" onClick={() => {\r\n                                           setIsModalOpen(false)\r\n                                           setEditMode(false)\r\n                                       }} shape={'round'}>\r\n                                           Cancel\r\n                                       </Button>,\r\n                                       <Button key=\"edit\" type=\"primary\" shape={'round'} onClick={() => {\r\n                                           setEditMode(true)\r\n                                           editMode\r\n                                               ? setEditMode(false)\r\n                                               : setEditMode(true)\r\n                                       }}>\r\n                                           Edit\r\n                                       </Button>]\r\n                                   : [<Button key=\"back\" onClick={() => setIsModalOpen(false)}\r\n                                              shape={'round'}>Cancel</Button>]}>\r\n                            {!editMode\r\n                                ?\r\n                                <div style={{fontSize: '21px', display: 'flex', flexDirection: 'column', gap: '10px'}}>\r\n                                    <div>id: {header?.userId || '---'}</div>\r\n                                    <div>name: {header?.fullName || '---'}</div>\r\n                                    <div>about: {<i>{header?.aboutMe}</i> || '---'}</div>\r\n                                    <div>looking for a job: {header?.lookingForAJob ? 'Yes' : 'No'}</div>\r\n                                    <div>My professional skills: {\r\n                                        <i>{header?.lookingForAJobDescription}</i> || '---'}</div>\r\n                                    <ul>\r\n                                        <li>vk: {header?.contacts?.vk || '---'}</li>\r\n                                        <li>facebook: {header?.contacts?.facebook || '---'}</li>\r\n                                        <li>github: {header?.contacts?.github || '---'}</li>\r\n                                        <li>twitter: {header?.contacts?.twitter || '---'}</li>\r\n                                        <li>instagram: {header?.contacts?.instagram || '---'}</li>\r\n                                    </ul>\r\n                                </div>\r\n                                : <UpdateProfileDataFrom\r\n                                    onSubmit={onSubmit}\r\n                                    initialValues={{\r\n                                        fullName: header?.fullName,\r\n                                        aboutMe: header.aboutMe,\r\n                                        lookingForAJob: header.lookingForAJob,\r\n                                        lookingForAJobDescription: header.lookingForAJobDescription,\r\n                                        vk: header.contacts.vk,\r\n                                        github: header.contacts.github,\r\n                                        facebook: header.contacts.facebook,\r\n                                        instagram: header.contacts.instagram,\r\n                                        twitter: header.contacts.twitter\r\n                                    }}/>}\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n                {!match.params.userId && <label>\r\n                    Upload profile photo <br/>\r\n                    <input type=\"file\" onChange={onPhotoSelected}/>\r\n                </label>}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {WallContainer} from './Wall/WallContainer';\r\nimport {HeaderContainer} from './Header/HeaderContainer';\r\n\r\n\r\nexport function Profile() {\r\n\r\n    return <>\r\n            <HeaderContainer/>\r\n            <WallContainer/>\r\n        </>\r\n\r\n}","import React, {ComponentType} from 'react';\r\nimport {Profile} from './Profile';\r\nimport {getProfile, getStatus} from '../../../redux/profileReducer';\r\nimport {connect} from 'react-redux';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {RootStateType} from '../../../redux/redux-store';\r\nimport {compose} from 'redux';\r\nimport {PreLoader} from '../Users/PreLoader';\r\n\r\ntype PathParamsType = {\r\n    userId: string | undefined\r\n}\r\ntype MapStateToPropsType = {\r\n    isLoading: boolean\r\n    authUserId: number | null\r\n}\r\ntype ProfileInnerContainerPropsType = RouteComponentProps<PathParamsType> & MapStateToPropsType & {\r\n    getProfile: (userId: number | null) => void\r\n    getStatus: (userId: number | null) => void\r\n}\r\n\r\nclass ProfileInnerContainer extends React.Component<ProfileInnerContainerPropsType, {}> {\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = Number(this.props.match.params.userId)\r\n        if (!userId) {\r\n            userId = this.props.authUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<ProfileInnerContainerPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return this.props.isLoading\r\n            ? <PreLoader/>\r\n            : <Profile/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n    return {\r\n        isLoading: state.profilePage.isLoading,\r\n        authUserId: state.auth.id\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(connect(mapStateToProps, {getProfile, getStatus}),withRouter)(ProfileInnerContainer)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardUser\":\"CardUser_cardUser__P3Qb1\",\"info\":\"CardUser_info__7L2PB\",\"name\":\"CardUser_name__KRpOP\",\"status\":\"CardUser_status__ggZmc\"};","import React from 'react';\r\nimport {Avatar} from 'antd';\r\nimport s from './CardUser.module.css';\r\n\r\ntype PropsType = {\r\n    size: number\r\n    url: string\r\n    name: string\r\n    status: string\r\n}\r\n\r\nexport function CardUser({size, url, name, status}: PropsType) {\r\n    return (\r\n        <div className={s.cardUser}>\r\n            <Avatar size={size} src={url}/>\r\n            <div className={s.info}>\r\n                <div className={s.name}>\r\n                    {name}\r\n                </div>\r\n                <div className={s.status}>\r\n                    {status}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"names":["Post","name","date","postContent","likes","comments","className","s","CardUser","size","url","status","TextArea","Input","ATextarea","makeField","TextAreareq","required","reduxForm","form","props","onSubmit","handleSubmit","Field","component","placeholder","autoSize","minRows","maxRows","hasFeedback","validate","htmlType","shape","disabled","pristine","Wall","memo","posts","addPost","mappedPosts","map","p","id","value","postText","WallContainer","connect","state","profilePage","MainAvatar","online","dot","offset","color","style","width","height","border","src","MainName","MainStatus","editMode","activateEditMode","setState","deactivateEditMode","onChangeHandler","e","currentTarget","onEnterPressHandler","key","updateStatus","trim","prevProps","prevState","this","maxLength","autoFocus","onChange","onBlur","onKeyDown","onDoubleClick","React","AInput","ACheckbox","Checkbox","ATextArea","InputReq","TextAreaReq","minHeight","error","message","type","showIcon","closable","label","rows","display","justifyContent","submitting","HeaderContainer","compose","header","uploadPhoto","updateProfileData","withRouter","match","useState","isModalOpen","setIsModalOpen","setEditMode","photos","large","fullName","onClick","title","visible","onCancel","footer","params","userId","formData","model","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","vk","github","facebook","instagram","twitter","initialValues","fontSize","flexDirection","gap","target","files","Profile","ProfileInnerContainer","Number","authUserId","history","push","getProfile","getStatus","refreshProfile","snapshot","isLoading","PreLoader","auth"],"sourceRoot":""}