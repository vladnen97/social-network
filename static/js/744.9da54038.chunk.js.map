{"version":3,"file":"static/js/744.9da54038.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Content/Users/User.module.css?447a","components/Content/Users/User.tsx","webpack://samurai-way/./src/components/Content/Users/Users.module.css?df65","components/Content/Users/Users.tsx","redux/users-selectors.ts","components/Content/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userContainer\":\"User_userContainer__uCBJN\",\"inner\":\"User_inner__fTTt-\",\"info\":\"User_info__VAv2f\",\"link\":\"User_link__kW+Mx\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Avatar, Button, Typography } from 'antd';\r\nimport s from './User.module.css'\r\n\r\nconst {Text, Title} = Typography\r\n\r\ntype UserPropsType = {\r\n    id: number,\r\n    name: string,\r\n    status: string | null,\r\n    photos: { small: string | null, large: string | null },\r\n    followed: boolean\r\n    onFollowClickHandler: () => void\r\n    onUnFollowClickHandler: () => void\r\n    isLoading: boolean\r\n}\r\n\r\nexport const User = (props: UserPropsType) => {\r\n    return (\r\n        <div className={s.userContainer}>\r\n            <div className={s.inner}>\r\n                <Avatar size={72} src={props.photos.small || 'https://placehold.jp/150x150.png'}/>\r\n                <div className={s.info}>\r\n                    <NavLink to={'/profile/' + props.id} className={s.link}>\r\n                        <Title level={4} style={{margin: '0'}}>{props.name}</Title>\r\n                    </NavLink>\r\n                    <Text type={'secondary'} style={{fontSize: '1rem'}}>\r\n                        {props.status || 'no status :('}\r\n                    </Text>\r\n                </div>\r\n            </div>\r\n            <Button size={'large'}\r\n                    onClick={props.followed ? props.onUnFollowClickHandler : props.onFollowClickHandler}\r\n                    loading={props.isLoading}\r\n                    disabled={props.isLoading}\r\n                    shape={'round'}>\r\n                {props.followed ? 'Unfollow' : 'Follow'}\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Users_container__Wn6XN\",\"pagination\":\"Users_pagination__qQfsV\"};","import React from 'react';\r\nimport {UsersPropsType} from './UsersContainer';\r\nimport {Pagination} from 'antd';\r\nimport {User} from './User';\r\nimport s from './Users.module.css'\r\n\r\nexport const Users = (props: Omit<UsersPropsType, 'isFetching' | 'getUsers'>) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={s.container}>\r\n                {\r\n                    props.users.map(el => {\r\n\r\n                        const onFollowClickHandler = () => {\r\n                            props.setFollow(el.id)\r\n                        }\r\n                        const onUnFollowClickHandler = () => {\r\n                            props.setUnFollow(el.id)\r\n                        }\r\n\r\n                        return <User key={el.id}\r\n                                     id={el.id}\r\n                                     name={el.name}\r\n                                     status={el.status}\r\n                                     followed={el.followed}\r\n                                     photos={el.photos}\r\n                                     isLoading={props.followingInProgress.indexOf(el.id) !== -1}\r\n                                     onFollowClickHandler={onFollowClickHandler}\r\n                                     onUnFollowClickHandler={onUnFollowClickHandler}/>\r\n                    })}\r\n            </div>\r\n\r\n            <div className={s.pagination}>\r\n                <Pagination\r\n                    size={'default'}\r\n                    total={props.totalCount}\r\n                    showTotal={(total) => `Total ${total} items`}\r\n                    defaultPageSize={12}\r\n                    showTitle={false}\r\n                    current={props.currentPage}\r\n                    onChange={(page) => props.setCurrentPage(page)}\r\n                    showSizeChanger={false}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n","import {RootStateType} from './redux-store';\r\n\r\nexport const getUsersSelector = (state: RootStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getIsFetchingSelector = (state: RootStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state: RootStateType) => {\r\n    return state.usersPage.totalCount\r\n}\r\n\r\nexport const getCurrentPageSelector = (state: RootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getFollowingProgressSelector = (state: RootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from 'react-redux';\r\nimport {RootStateType} from '../../../redux/redux-store';\r\nimport {getUsers, setCurrentPage, setFollow, setUnFollow, UsersPageType, UserType} from '../../../redux/usersReducer';\r\nimport React, {ComponentType} from 'react';\r\nimport {Users} from './Users';\r\nimport {compose} from 'redux';\r\nimport {PreLoader} from './PreLoader';\r\nimport {\r\n    getCurrentPageSelector, getFollowingProgressSelector,\r\n    getIsFetchingSelector,\r\n    getTotalUsersCountSelector,\r\n    getUsersSelector\r\n} from '../../../redux/users-selectors';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UserType>\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setFollow: (userId: number) => void\r\n    setUnFollow: (userId: number) => void\r\n    setCurrentPage: (page: number) => void\r\n    getUsers: (currentPage: number) => void\r\n}\r\nexport type UsersPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass UsersAPIComponent extends React.Component<UsersPropsType, UsersPageType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setCurrentPage(1)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.isFetching\r\n                ?\r\n                <PreLoader/>\r\n                : <Users users={this.props.users}\r\n                         totalCount={this.props.totalCount}\r\n                         currentPage={this.props.currentPage}\r\n                         followingInProgress={this.props.followingInProgress}\r\n                         setFollow={this.props.setFollow}\r\n                         setUnFollow={this.props.setUnFollow}\r\n                         setCurrentPage={this.onPageChanged}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        totalCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        followingInProgress: getFollowingProgressSelector(state),\r\n    }\r\n}\r\n\r\nexport default compose<ComponentType>(connect(mapStateToProps, {\r\n    setFollow,\r\n    setUnFollow,\r\n    setCurrentPage,\r\n    getUsers\r\n}))(UsersAPIComponent)\r\n"],"names":["Text","Typography","Title","User","props","className","s","size","src","photos","small","to","id","level","style","margin","name","type","fontSize","status","onClick","followed","onUnFollowClickHandler","onFollowClickHandler","loading","isLoading","disabled","shape","Users","users","map","el","followingInProgress","indexOf","setFollow","setUnFollow","total","totalCount","showTotal","defaultPageSize","showTitle","current","currentPage","onChange","page","setCurrentPage","showSizeChanger","getUsersSelector","state","usersPage","getIsFetchingSelector","isFetching","getTotalUsersCountSelector","getCurrentPageSelector","getFollowingProgressSelector","UsersAPIComponent","onPageChanged","pageNumber","getUsers","this","PreLoader","React","compose","connect"],"sourceRoot":""}